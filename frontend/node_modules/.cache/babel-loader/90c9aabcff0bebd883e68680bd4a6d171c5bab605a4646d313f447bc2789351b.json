{"ast":null,"code":"// auth.js\nexport const isAuthenticated = () => {\n  const token = localStorage.getItem('access_token');\n  return !!token;\n};\nexport const getRole = () => {\n  return localStorage.getItem('role');\n};\nexport const getUserId = () => {\n  const role = getRole();\n  return role === 'donor' ? localStorage.getItem('donorId') : localStorage.getItem('ngoId');\n};\nexport const clearAuth = () => {\n  localStorage.removeItem('access_token');\n  localStorage.removeItem('role');\n  localStorage.removeItem('donorId');\n  localStorage.removeItem('ngoId');\n};\nexport const saveAuth = (token, role) => {\n  localStorage.setItem('access_token', token);\n  localStorage.setItem('role', role);\n};\n\n// Check if token is expired\nexport const isTokenValid = () => {\n  const token = localStorage.getItem('access_token');\n  if (!token) return false;\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    return payload.exp * 1000 > Date.now();\n  } catch {\n    return false;\n  }\n};","map":{"version":3,"names":["isAuthenticated","token","localStorage","getItem","getRole","getUserId","role","clearAuth","removeItem","saveAuth","setItem","isTokenValid","payload","JSON","parse","atob","split","exp","Date","now"],"sources":["C:/Users/Admin/Desktop/food-rescue/food-rescue/frontend/src/auth.js"],"sourcesContent":["// auth.js\nexport const isAuthenticated = () => {\n  const token = localStorage.getItem('access_token');\n  return !!token;\n};\n\nexport const getRole = () => {\n  return localStorage.getItem('role');\n};\n\nexport const getUserId = () => {\n  const role = getRole();\n  return role === 'donor' \n    ? localStorage.getItem('donorId') \n    : localStorage.getItem('ngoId');\n};\n\nexport const clearAuth = () => {\n  localStorage.removeItem('access_token');\n  localStorage.removeItem('role');\n  localStorage.removeItem('donorId');\n  localStorage.removeItem('ngoId');\n};\n\nexport const saveAuth = (token, role) => {\n  localStorage.setItem('access_token', token);\n  localStorage.setItem('role', role);\n};\n\n// Check if token is expired\nexport const isTokenValid = () => {\n  const token = localStorage.getItem('access_token');\n  if (!token) return false;\n  \n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    return payload.exp * 1000 > Date.now();\n  } catch {\n    return false;\n  }\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,OAAO,CAAC,CAACF,KAAK;AAChB,CAAC;AAED,OAAO,MAAMG,OAAO,GAAGA,CAAA,KAAM;EAC3B,OAAOF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;AACrC,CAAC;AAED,OAAO,MAAME,SAAS,GAAGA,CAAA,KAAM;EAC7B,MAAMC,IAAI,GAAGF,OAAO,CAAC,CAAC;EACtB,OAAOE,IAAI,KAAK,OAAO,GACnBJ,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,GAC/BD,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACnC,CAAC;AAED,OAAO,MAAMI,SAAS,GAAGA,CAAA,KAAM;EAC7BL,YAAY,CAACM,UAAU,CAAC,cAAc,CAAC;EACvCN,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;EAC/BN,YAAY,CAACM,UAAU,CAAC,SAAS,CAAC;EAClCN,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;AAClC,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACR,KAAK,EAAEK,IAAI,KAAK;EACvCJ,YAAY,CAACQ,OAAO,CAAC,cAAc,EAAET,KAAK,CAAC;EAC3CC,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAAC;AACpC,CAAC;;AAED;AACA,OAAO,MAAMK,YAAY,GAAGA,CAAA,KAAM;EAChC,MAAMV,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,IAAI,CAACF,KAAK,EAAE,OAAO,KAAK;EAExB,IAAI;IACF,MAAMW,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACd,KAAK,CAACe,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,OAAOJ,OAAO,CAACK,GAAG,GAAG,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EACxC,CAAC,CAAC,MAAM;IACN,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}